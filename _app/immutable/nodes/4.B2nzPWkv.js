import{t as g,e as v,a as p,r as Xe,b as Oe}from"../chunks/CTCU8MtZ.js";import{i as gt}from"../chunks/Nm97N5gH.js";import{p as bt,o as _t,l as He,a as yt,t as A,g as e,b as xt,e as d,s as o,c as U,d as u,r as i,i as Ze,n as Me,j as $e,m as E,h as ue,f as Pe}from"../chunks/BRwduGv0.js";import{s as O}from"../chunks/BASCv1CT.js";import{i as k}from"../chunks/CttsxjpS.js";import{e as ce,r as z,i as Ie,a as et}from"../chunks/WmSvwHMj.js";import{b as J}from"../chunks/D_xwPvKz.js";import{b as tt}from"../chunks/Bye-va2A.js";import{b as me}from"../chunks/BaBMOl-p.js";import{s as Ue}from"../chunks/nPbPBRHT.js";import{F as Re}from"../chunks/Ch1WBRTM.js";import{G as ht}from"../chunks/DFcTbYjU.js";import{c as rt}from"../chunks/BqI594Fa.js";var wt=g('<p class="mt-1 text-xs text-red-600"> </p>'),kt=g('<div class="mb-4 p-3 border border-yellow-300 bg-yellow-50 rounded"><label for="gemini-api-key" class="block text-sm font-medium text-yellow-800">Enter Gemini API Key:</label> <div class="mt-1 flex rounded-md shadow-sm"><input type="password" id="gemini-api-key" class="flex-1 block w-full rounded-none rounded-l-md border-gray-300 px-2 py-1 focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm" placeholder="Paste your API key here"> <button type="button" class="inline-flex items-center rounded-r-md border border-l-0 border-gray-300 bg-gray-50 px-3 text-sm text-gray-500 hover:bg-gray-100">Save Key</button></div> <!></div>'),It=g("<span>Filling...</span>"),At=g("<span>Auto-fill Nutrition (AI)</span>"),Et=g('<p class="mt-1 text-xs text-red-600"> </p>'),St=g("<option> </option>"),qt=g('<div><label class="block font-medium text-gray-700 capitalize"> </label> <input type="number" step="any" class="mt-1 block w-full p-1 border border-gray-300 rounded shadow-sm" placeholder="Optional"></div>'),Nt=g('<div class="border border-indigo-300 rounded-lg p-4 shadow-sm bg-indigo-50 mb-6"><h2 class="text-lg font-semibold mb-3 text-indigo-800">Create New Food Item</h2> <!> <div class="grid grid-cols-1 md:grid-cols-3 gap-4 mb-3"><div><label for="new-item-name" class="block text-sm font-medium text-gray-700">Name</label> <input type="text" id="new-item-name" class="mt-1 block w-full p-1 border border-gray-300 rounded shadow-sm" required> <button type="button" class="mt-1 px-2 py-1 text-xs bg-blue-500 text-white rounded hover:bg-blue-600 disabled:opacity-50 disabled:cursor-not-allowed"><!></button> <!> <p class="mt-1 text-xs text-gray-500">Uses Gemini AI. Requires saved API Key.</p></div> <div><label for="new-item-qty" class="block text-sm font-medium text-gray-700">Serving Qty</label> <input type="number" id="new-item-qty" class="mt-1 block w-full p-1 border border-gray-300 rounded shadow-sm" required min="0"></div> <div><label for="new-item-unit" class="block text-sm font-medium text-gray-700">Serving Unit</label> <select id="new-item-unit" class="mt-1 block w-full p-1 border border-gray-300 rounded shadow-sm" required></select></div></div> <div class="grid grid-cols-2 md:grid-cols-6 gap-4 mb-3 text-sm"><!> <div class="col-span-2 md:col-span-5 text-xs text-gray-500">AI-generated data should be verified.</div></div> <div class="mb-3 pt-2"><p class="text-sm font-medium text-gray-700">Calculated Kcal: <span class="font-bold text-indigo-600"> </span></p></div> <div class="mb-3"><label for="new-item-comment" class="block text-sm font-medium text-gray-700">Comment (Optional)</label> <textarea id="new-item-comment" class="mt-1 block w-full p-1 border border-gray-300 rounded shadow-sm" rows="2"></textarea></div> <div class="flex justify-end space-x-3"><button type="button" class="px-3 py-1 border border-gray-300 rounded text-gray-700 hover:bg-gray-50">Cancel</button> <button type="button" class="px-3 py-1 bg-green-600 text-white rounded hover:bg-green-700">Save Item</button></div></div>'),Ft=g('<p class="text-center text-gray-500">Loading food items...</p>'),Kt=g('<p class="text-center text-red-500"> </p>'),Ct=g('<p class="text-center text-gray-500"> </p>'),Ot=g('<p class="text-center text-gray-500">No food items found. Add some!</p>'),Pt=g('<input type="text" class="w-full p-1 border border-blue-300 rounded">'),Ut=g('<span class="font-semibold text-lg cursor-pointer hover:bg-yellow-100" role="button" tabindex="0"> </span>'),Gt=g('<input type="number" class="w-16 p-0 border border-blue-300 rounded text-xs mx-1">'),Lt=g('<span class="cursor-pointer hover:bg-yellow-100 px-1" role="button" tabindex="0"> </span>'),jt=g("<option> </option>"),Jt=g('<select class="p-0 border border-blue-300 rounded text-xs mx-1"></select>'),Tt=g('<span class="cursor-pointer hover:bg-yellow-100 px-1" role="button" tabindex="0"> </span>'),Mt=g('<textarea class="w-full p-1 border border-blue-300 rounded mt-1 text-sm" rows="2"></textarea>'),Rt=g('<button type="button" class="text-sm text-left text-gray-600 mt-1 cursor-pointer hover:bg-yellow-100 p-1 rounded w-full" aria-label="Edit comment"> </button>'),Dt=g('<input type="number" step="any" class="w-12 p-0 border border-blue-300 rounded text-xs ml-1">'),Bt=g('<span class="ml-1 cursor-pointer hover:bg-yellow-100 px-1" role="button" tabindex="0"> </span>'),Qt=g("<!> <!>",1),Vt=g('<input type="number" step="any" class="w-12 p-0 border border-blue-300 rounded text-xs ml-1">'),Yt=g('<span class="ml-1 cursor-pointer hover:bg-yellow-100 px-1" role="button" tabindex="0"> </span>'),zt=g("<!> <!>",1),Wt=g('<input type="number" step="any" class="w-12 p-0 border border-blue-300 rounded text-xs ml-1">'),Xt=g('<span class="ml-1 cursor-pointer hover:bg-yellow-100 px-1" role="button" tabindex="0"> </span>'),Ht=g("<!> <!>",1),Zt=g('<input type="number" step="any" class="w-12 p-0 border border-blue-300 rounded text-xs ml-1">'),$t=g('<span class="ml-1 cursor-pointer hover:bg-yellow-100 px-1" role="button" tabindex="0"> </span>'),er=g("<!> <!>",1),tr=g('<input type="number" step="any" class="w-12 p-0 border border-blue-300 rounded text-xs ml-1">'),rr=g('<span class="ml-1 cursor-pointer hover:bg-yellow-100 px-1" role="button" tabindex="0"> </span>'),ar=g('<li class="border border-gray-200 rounded-lg p-4 shadow-sm bg-white"><div class="flex justify-between items-start mb-2"><div class="flex-grow mr-4"><!> <span class="text-sm text-gray-500 ml-2">( <!> <!> )</span> <!></div> <div class="flex-shrink-0"><button class="text-red-500 hover:text-red-700 p-1" aria-label="Delete item">üóëÔ∏è</button></div></div> <div class="flex flex-wrap gap-2 text-xs"><div class="bg-blue-100 text-blue-800 px-1.5 py-0.5 rounded-md"><span class="font-medium uppercase text-gray-500">KCAL:</span> <span class="ml-1"> </span></div> <div class="bg-green-100 text-green-800 px-1.5 py-0.5 rounded-md"><span class="font-medium uppercase text-gray-500">PFC:</span> <!></div> <div class="bg-yellow-100 text-yellow-800 px-1.5 py-0.5 rounded-md"><span class="font-medium uppercase text-gray-500">FiS:</span> <!></div> <div class="bg-orange-100 text-orange-800 px-1.5 py-0.5 rounded-md"><span class="font-medium uppercase text-gray-500">MPS:</span> <!></div> <div class="bg-orange-100 text-orange-800 px-1.5 py-0.5 rounded-md"><span class="font-medium uppercase text-gray-500">6:3:</span> <!></div> <div class="bg-purple-100 text-purple-800 px-1.5 py-0.5 rounded-md"><span class="font-medium uppercase text-gray-500">GL:</span> <!></div></div></li>'),nr=g('<div class="container mx-auto p-4 max-w-5xl"><h1 class="text-2xl font-bold mb-4">Manage Food Items</h1> <div class="mb-4"><input type="search" placeholder="Search food items by name or comment..." class="w-full p-2 border border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500"></div> <div class="mb-4 text-right"><button type="button" class="px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">+ Add New Item</button></div> <!> <!> <ul class="space-y-4"></ul></div>');function _r(at,nt){bt(nt,!1);let S=U([]),Ke=U([]),ve=U(""),Ge=U(!0),ye=U(null),Ae=U(),G=U(null),F=U(null),x=U(null),K=U(null);async function ot(){o(Ge,!0),o(ye,null);try{const{data:s,error:a}=await Ue.from("food_items").select("*").order("name",{ascending:!0});if(a)throw a;s&&(o(S,s),o(Ae,new Re(e(S),{keys:["name","comment"],threshold:.3,includeScore:!1})))}catch(s){console.error("Error fetching food items:",s),o(ye,`Failed to load food items: ${s.message}`),o(S,[]),o(Ke,[])}finally{o(Ge,!1)}}let Ee=U(!1),r=U({});const De=["g","dl","pcs","portion"];let Se="",Ce=U(!1),W=U(null),Le=U(!1),qe=U("");function P(s,a){o(Ee,!1),o(G,s.id),o(F,a),o(x,s[a]),Ze().then(()=>{var I,h;(I=e(K))==null||I.focus(),(h=e(K))==null||h.select()})}function xe(){o(G,null),o(F,null),o(x,null)}async function Z(){if(e(G)===null||e(F)===null||e(x)===null)return;const s=e(S).find(h=>h.id===e(G));if(!s)return;let a=e(x);if(["protein","fat","carbs","fibers","sugar","mufa","pufa","sfa","gl","omega3","omega6"].includes(e(F))&&(a=parseFloat(e(x)),isNaN(a))){console.error("Invalid number format for",e(F)),xe();return}if(s[e(F)]===a){xe();return}try{const{error:h}=await Ue.from("food_items").update({[e(F)]:a}).eq("id",e(G));if(h)throw h;const b=e(S).findIndex(q=>q.id===e(G));b>-1&&(E(S,e(S)[b]={...e(S)[b],[e(F)]:a}),o(S,[...e(S)])),xe()}catch(h){console.error(`Error updating ${e(F)}:`,h),xe()}}function te(s){s.key==="Enter"?Z():s.key==="Escape"&&xe()}async function st(s){if(window.confirm("Are you sure you want to delete this food item? This cannot be undone."))try{const{error:a}=await Ue.from("food_items").delete().eq("id",s);if(a)throw a;o(S,e(S).filter(I=>I.id!==s))}catch(a){console.error("Error deleting item:",a),o(ye,`Failed to delete item: ${a.message}`)}}function it(){xe(),o(Ee,!0),o(r,{name:"",serving_unit:"g",serving_qty:100,protein:null,fat:null,carbs:null,fibers:null,sugar:null,mufa:null,pufa:null,sfa:null,gl:null,omega3:null,omega6:null,comment:null}),Ze().then(()=>{const s=document.getElementById("new-item-name");s==null||s.focus()})}function Be(){o(Ee,!1),o(r,{})}function lt(s){switch(s.target.value){case"g":E(r,e(r).serving_qty=100);break;case"dl":case"pcs":case"portion":E(r,e(r).serving_qty=1);break;default:E(r,e(r).serving_qty=e(r).serving_qty??1)}o(r,{...e(r)})}async function dt(){var a,I,h;if(!((a=e(r).name)!=null&&a.trim())){alert("Item name is required.");return}if(e(r).serving_qty===void 0||e(r).serving_qty<=0){alert("Serving quantity must be a positive number.");return}if(!((I=e(r).serving_unit)!=null&&I.trim())){alert("Serving unit is required.");return}const s={name:e(r).name.trim(),serving_unit:e(r).serving_unit.trim(),serving_qty:e(r).serving_qty,protein:e(r).protein??null,fat:e(r).fat??null,carbs:e(r).carbs??null,fibers:e(r).fibers??null,sugar:e(r).sugar??null,mufa:e(r).mufa??null,pufa:e(r).pufa??null,sfa:e(r).sfa??null,gl:e(r).gl??null,omega3:e(r).omega3??null,omega6:e(r).omega6??null,comment:((h=e(r).comment)==null?void 0:h.trim())||null};try{const{data:b,error:q}=await Ue.from("food_items").insert([s]).select();if(q)throw q;b&&b.length>0&&o(S,[b[0],...e(S)]),Be()}catch(b){console.error("Error saving new item:",b),o(ye,`Failed to save new item: ${b.message}`)}}function ut(){typeof window<"u"&&(Se=localStorage.getItem("geminiApiKey")||"",o(qe,Se))}function ct(){typeof window<"u"&&(localStorage.setItem("geminiApiKey",e(qe)),Se=e(qe),o(Le,!1),o(W,null),alert("API Key saved successfully!"))}async function mt(){var s,a,I,h,b,q,D,B,L,T;if(!((s=e(r).name)!=null&&s.trim())){o(W,"Please enter a food item name first.");return}if(!Se){o(W,"Gemini API Key is missing. Please enter and save it below."),o(Le,!0);return}o(Ce,!0),o(W,null);try{const Q=new ht({apiKey:Se}),re=`{
         "protein": number | null,
         "fat": number | null,
         "carbs": number | null,
         "fibers": number | null,
         "sugar": number | null,
         "mufa": number | null,
         "pufa": number | null,
         "sfa": number | null,
         "gl": number | null,
         "omega3": number | null, 
         "omega6": number | null,
         "comment"?: string | null // Keep comment optional
       }`,ae={};["protein","fat","carbs","fibers","sugar","mufa","pufa","sfa","gl","omega3","omega6"].forEach(M=>{const c=e(r)[M];typeof c=="number"&&!isNaN(c)&&(ae[M]=c)});let fe="";Object.keys(ae).length>0&&(fe=`

Use the following already known values (for the requested ${e(r).serving_qty} ${e(r).serving_unit} serving) to help inform your search and estimations:
${JSON.stringify(ae)}`);const we=e(r).serving_qty??1,ie=((a=e(r).serving_unit)==null?void 0:a.trim())||"unit",le=((I=e(r).comment)==null?void 0:I.trim())||"",ke=le?`

Consider the following user-provided comment for additional context: "${le}"`:"",pe=`Provide nutritional information per ${we} ${ie} for the food item "${e(r).name.trim()}".${ke}
Use web search (grounding) to find the most accurate data.${fe}
IMPORTANT: For the 'carbs' field, provide the value for carbohydrates excluding fiber. In the EU and UK, this is the standard definition, but in US sources, it may include fiber.
If specific data for fields like MUFA, PUFA, SFA, or GL is not found for the exact name, search for a more general category (e.g., search for "cheese" if "Brand X Swiss Cheese" data is missing).
You MUST estimate any remaining nutritional values you cannot find through search, using any provided known values as context. You are good at this. Ensure ALL *nutritional* fields in the requested JSON structure are populated with a numerical value.
If you make any significant assumptions during estimation (e.g., assuming 'baked' for cooking method if unspecified, assuming a standard weight for '1 medium banana'), include them in the 'comment' field of the JSON response, prefixed with "LLM Assumptions: ". If no significant assumptions were made, set the 'comment' field to null in the JSON response.
Do not reference sources or provide citations in the comment field. Be brief.
Return the result ONLY as a valid JSON object matching this structure, with no surrounding text or explanations:
${re}`,de=await Q.models.generateContent({model:"gemini-2.5-pro-preview-03-25",contents:[{role:"user",parts:[{text:pe}]}],config:{tools:[{googleSearch:{}}],thinkingConfig:{includeThoughts:!1}}}),V=((B=(D=(q=(b=(h=de.candidates)==null?void 0:h[0])==null?void 0:b.content)==null?void 0:q.parts)==null?void 0:D[0])==null?void 0:B.text)||"";if(!V)throw console.error("No text found in Gemini response:",de),new Error("AI response did not contain text.");console.log("Raw Gemini Response:",V);let C,Y=null;try{const M=/.*(\{[\s\S]*\})/s;if(Y=V.match(M),!Y||!Y[1])throw console.error("Could not find JSON object using regex in response:",V),new Error("AI response did not contain a recognizable JSON object structure.");const c=Y[1];C=JSON.parse(c)}catch(M){throw console.error("Failed to parse extracted JSON:",M,`
Extracted Text:`,Y?Y[1]:"N/A",`
Original Response Text:`,V),new Error("AI response contained JSON, but it was invalid or couldn't be extracted correctly.")}E(r,e(r).protein=C.protein??null),E(r,e(r).fat=C.fat??null),E(r,e(r).carbs=C.carbs??null),E(r,e(r).fibers=C.fibers??null),E(r,e(r).sugar=C.sugar??null),E(r,e(r).mufa=C.mufa??null),E(r,e(r).pufa=C.pufa??null),E(r,e(r).sfa=C.sfa??null),E(r,e(r).gl=C.gl??null);const $=((L=e(r).comment)==null?void 0:L.trim())||"";E(r,e(r).omega3=C.omega3??null),E(r,e(r).omega6=C.omega6??null);const ge=((T=C.comment)==null?void 0:T.trim())||"";let ne=$;if(ge.startsWith("LLM Assumptions:")){const M=ge;ne=$?`${$}
${M}`:M}E(r,e(r).comment=ne),o(r,{...e(r)})}catch(Q){console.error("Error during Gemini auto-fill:",Q),o(W,`Failed to auto-fill: ${Q.message}`)}finally{o(Ce,!1)}}_t(()=>{ot(),ut()});function Ne(s){return s==null?"-":Math.round(s).toString()}He(()=>(e(S),Re),()=>{e(S)&&o(Ae,new Re(e(S),{keys:["name","comment"],threshold:.3,includeScore:!1}))}),He(()=>(e(Ae),e(ve),e(S)),()=>{o(Ke,!e(Ae)||!e(ve).trim()?e(S)||[]:e(Ae).search(e(ve).trim()).map(s=>s.item))}),yt(),gt();var je=nr(),Je=u(d(je),2),Qe=d(Je);z(Qe),i(Je);var Te=u(Je,2),Ve=d(Te);i(Te);var Ye=u(Te,2);{var vt=s=>{var a=Nt(),I=u(d(a),2);{var h=c=>{var _=kt(),N=u(d(_),2),X=d(N);z(X);var H=u(X,2);i(N);var Fe=u(N,2);{var be=oe=>{var l=wt(),t=d(l,!0);i(l),A(()=>O(t,e(W))),p(oe,l)};k(Fe,oe=>{e(W)&&e(W).includes("API Key")&&oe(be)})}i(_),J(X,()=>e(qe),oe=>o(qe,oe)),v("click",H,ct),p(c,_)};k(I,c=>{e(Le)&&c(h)})}var b=u(I,2),q=d(b),D=u(d(q),2);z(D);var B=u(D,2),L=d(B);{var T=c=>{var _=It();p(c,_)},Q=c=>{var _=At();p(c,_)};k(L,c=>{e(Ce)?c(T):c(Q,!1)})}i(B);var re=u(B,2);{var ae=c=>{var _=Et(),N=d(_,!0);i(_),A(()=>O(N,e(W))),p(c,_)};k(re,c=>{e(W)&&!e(W).includes("API Key")&&c(ae)})}Me(2),i(q);var he=u(q,2),fe=u(d(he),2);z(fe),i(he);var we=u(he,2),ie=u(d(we),2);A(()=>{e(r),$e(()=>{})}),ce(ie,5,()=>De,Ie,(c,_)=>{var N=St(),X={},H=d(N,!0);i(N),A(()=>{X!==(X=e(_))&&(N.value=(N.__value=e(_))??""),O(H,e(_))}),p(c,N)}),i(ie),i(we),i(b);var le=u(b,2),ke=d(le);ce(ke,0,()=>["protein","fat","carbs","fibers","sugar","mufa","pufa","sfa","omega6","omega3","gl"],c=>c,(c,_)=>{var N=qt();const X=ue(()=>_);var H=d(N),Fe=d(H,!0);i(H);var be=u(H,2);z(be),i(N),A(()=>{et(H,"for",`new-item-${_??""}`),O(Fe,_==="omega3"?"Omega-3":_==="omega6"?"Omega-6":_),et(be,"id",`new-item-${_??""}`)}),J(be,()=>e(r)[e(X)],oe=>E(r,e(r)[e(X)]=oe)),p(c,N)}),Me(2),i(le);var pe=u(le,2),de=d(pe),V=u(d(de)),C=d(V,!0);i(V),i(de),i(pe);var Y=u(pe,2),$=u(d(Y),2);Xe($),i(Y);var ge=u(Y,2),ne=d(ge),M=u(ne,2);i(ge),i(a),A((c,_)=>{B.disabled=c,O(C,_)},[()=>{var c;return e(Ce)||!((c=e(r).name)!=null&&c.trim())},()=>rt({protein:e(r).protein,carbs:e(r).carbs,fibers:e(r).fibers,fat:e(r).fat})],ue),J(D,()=>e(r).name,c=>E(r,e(r).name=c)),v("click",B,mt),J(fe,()=>e(r).serving_qty,c=>E(r,e(r).serving_qty=c)),tt(ie,()=>e(r).serving_unit,c=>E(r,e(r).serving_unit=c)),v("change",ie,lt),J($,()=>e(r).comment,c=>E(r,e(r).comment=c)),v("click",ne,Be),v("click",M,dt),p(s,a)};k(Ye,s=>{e(Ee)&&s(vt)})}var ze=u(Ye,2);{var ft=s=>{var a=Ft();p(s,a)},pt=(s,a)=>{{var I=b=>{var q=Kt(),D=d(q,!0);i(q),A(()=>O(D,e(ye))),p(b,q)},h=(b,q)=>{{var D=L=>{var T=Ct(),Q=d(T);i(T),A(()=>O(Q,`No food items match your search "${e(ve)??""}".`)),p(L,T)},B=(L,T)=>{{var Q=re=>{var ae=Ot();p(re,ae)};k(L,re=>{e(S).length===0&&re(Q)},T)}};k(b,L=>{e(Ke).length===0&&e(ve)?L(D):L(B,!1)},q)}};k(s,b=>{e(ye)?b(I):b(h,!1)},a)}};k(ze,s=>{e(Ge)?s(ft):s(pt,!1)})}var We=u(ze,2);ce(We,5,()=>e(Ke),s=>s.id,(s,a)=>{var I=ar(),h=d(I),b=d(h),q=d(b);{var D=l=>{var t=Pt();z(t),me(t,f=>o(K,f),()=>e(K)),J(t,()=>e(x),f=>o(x,f)),v("keydown",t,te),v("blur",t,Z),p(l,t)},B=l=>{var t=Ut(),f=d(t,!0);i(t),A(()=>O(f,e(a).name)),v("click",t,()=>P(e(a),"name")),v("keydown",t,y=>{y.key==="Enter"&&P(e(a),"name")}),p(l,t)};k(q,l=>{e(G)===e(a).id&&e(F)==="name"?l(D):l(B,!1)})}var L=u(q,2),T=u(d(L));{var Q=l=>{var t=Gt();z(t),me(t,f=>o(K,f),()=>e(K)),J(t,()=>e(x),f=>o(x,f)),v("keydown",t,te),v("blur",t,Z),p(l,t)},re=l=>{var t=Lt(),f=d(t,!0);i(t),A(()=>O(f,e(a).serving_qty)),v("click",t,()=>P(e(a),"serving_qty")),v("keydown",t,y=>{y.key==="Enter"&&P(e(a),"serving_qty")}),p(l,t)};k(T,l=>{e(G)===e(a).id&&e(F)==="serving_qty"?l(Q):l(re,!1)})}var ae=u(T,2);{var he=l=>{var t=Jt();A(()=>{e(x),$e(()=>{})}),ce(t,5,()=>De,Ie,(f,y)=>{var R=jt(),ee={},se=d(R,!0);i(R),A(()=>{ee!==(ee=e(y))&&(R.value=(R.__value=e(y))??""),O(se,e(y))}),p(f,R)}),i(t),tt(t,()=>e(x),f=>o(x,f)),v("change",t,Z),v("keydown",t,te),p(l,t)},fe=l=>{var t=Tt(),f=d(t,!0);i(t),A(()=>O(f,e(a).serving_unit)),v("click",t,()=>P(e(a),"serving_unit")),v("keydown",t,y=>{y.key==="Enter"&&P(e(a),"serving_unit")}),p(l,t)};k(ae,l=>{e(G)===e(a).id&&e(F)==="serving_unit"?l(he):l(fe,!1)})}Me(),i(L);var we=u(L,2);{var ie=l=>{var t=Mt();Xe(t),me(t,f=>o(K,f),()=>e(K)),J(t,()=>e(x),f=>o(x,f)),v("keydown",t,te),v("blur",t,Z),p(l,t)},le=l=>{var t=Rt(),f=d(t,!0);i(t),A(()=>O(f,e(a).comment||"(Click to add comment)")),v("click",t,()=>P(e(a),"comment")),p(l,t)};k(we,l=>{e(G)===e(a).id&&e(F)==="comment"?l(ie):l(le,!1)})}i(b);var ke=u(b,2),pe=d(ke);i(ke),i(h);var de=u(h,2),V=d(de),C=u(d(V),2),Y=d(C,!0);i(C),i(V);var $=u(V,2),ge=u(d($),2);ce(ge,0,()=>["protein","fat","carbs"],Ie,(l,t)=>{var f=Qt(),y=Pe(f);{var R=m=>{var n=Dt();z(n),me(n,w=>o(K,w),()=>e(K)),J(n,()=>e(x),w=>o(x,w)),v("keydown",n,te),v("blur",n,Z),p(m,n)},ee=m=>{var n=Bt(),w=d(n,!0);i(n),A(j=>O(w,j),[()=>Ne(e(a)[t])],ue),v("click",n,()=>P(e(a),t)),v("keydown",n,j=>{j.key==="Enter"&&P(e(a),t)}),p(m,n)};k(y,m=>{e(G)===e(a).id&&e(F)===t?m(R):m(ee,!1)})}var se=u(y,2);{var _e=m=>{var n=Oe(",");p(m,n)};k(se,m=>{t!=="carbs"&&m(_e)})}p(l,f)}),i($);var ne=u($,2),M=u(d(ne),2);ce(M,0,()=>["fibers","sugar"],Ie,(l,t)=>{var f=zt(),y=Pe(f);{var R=m=>{var n=Vt();z(n),me(n,w=>o(K,w),()=>e(K)),J(n,()=>e(x),w=>o(x,w)),v("keydown",n,te),v("blur",n,Z),p(m,n)},ee=m=>{var n=Yt(),w=d(n,!0);i(n),A(j=>O(w,j),[()=>Ne(e(a)[t])],ue),v("click",n,()=>P(e(a),t)),v("keydown",n,j=>{j.key==="Enter"&&P(e(a),t)}),p(m,n)};k(y,m=>{e(G)===e(a).id&&e(F)===t?m(R):m(ee,!1)})}var se=u(y,2);{var _e=m=>{var n=Oe(",");p(m,n)};k(se,m=>{t!=="sugar"&&m(_e)})}p(l,f)}),i(ne);var c=u(ne,2),_=u(d(c),2);ce(_,0,()=>["mufa","pufa","sfa"],Ie,(l,t)=>{var f=Ht(),y=Pe(f);{var R=m=>{var n=Wt();z(n),me(n,w=>o(K,w),()=>e(K)),J(n,()=>e(x),w=>o(x,w)),v("keydown",n,te),v("blur",n,Z),p(m,n)},ee=m=>{var n=Xt(),w=d(n,!0);i(n),A(j=>O(w,j),[()=>Ne(e(a)[t])],ue),v("click",n,()=>P(e(a),t)),v("keydown",n,j=>{j.key==="Enter"&&P(e(a),t)}),p(m,n)};k(y,m=>{e(G)===e(a).id&&e(F)===t?m(R):m(ee,!1)})}var se=u(y,2);{var _e=m=>{var n=Oe(",");p(m,n)};k(se,m=>{t!=="sfa"&&m(_e)})}p(l,f)}),i(c);var N=u(c,2),X=u(d(N),2);ce(X,0,()=>["omega6","omega3"],Ie,(l,t)=>{var f=er(),y=Pe(f);{var R=m=>{var n=Zt();z(n),me(n,w=>o(K,w),()=>e(K)),J(n,()=>e(x),w=>o(x,w)),v("keydown",n,te),v("blur",n,Z),p(m,n)},ee=m=>{var n=$t(),w=d(n,!0);i(n),A(j=>O(w,j),[()=>Ne(e(a)[t])],ue),v("click",n,()=>P(e(a),t)),v("keydown",n,j=>{j.key==="Enter"&&P(e(a),t)}),p(m,n)};k(y,m=>{e(G)===e(a).id&&e(F)===t?m(R):m(ee,!1)})}var se=u(y,2);{var _e=m=>{var n=Oe(",");p(m,n)};k(se,m=>{t!=="omega3"&&m(_e)})}p(l,f)}),i(N);var H=u(N,2),Fe=u(d(H),2);{var be=l=>{var t=tr();z(t),me(t,f=>o(K,f),()=>e(K)),J(t,()=>e(x),f=>o(x,f)),v("keydown",t,te),v("blur",t,Z),p(l,t)},oe=l=>{var t=rr(),f=d(t,!0);i(t),A(y=>O(f,y),[()=>Ne(e(a).gl)],ue),v("click",t,()=>P(e(a),"gl")),v("keydown",t,y=>{y.key==="Enter"&&P(e(a),"gl")}),p(l,t)};k(Fe,l=>{e(G)===e(a).id&&e(F)==="gl"?l(be):l(oe,!1)})}i(H),i(de),i(I),A(l=>O(Y,l),[()=>rt(e(a))],ue),v("click",pe,()=>st(e(a).id)),p(s,I)}),i(We),i(je),A(()=>Ve.disabled=e(Ee)),J(Qe,()=>e(ve),s=>o(ve,s)),v("click",Ve,it),p(at,je),xt()}export{_r as component};
